import os
import azure.functions as func
from azure.identity import ManagedIdentityCredential
from azure.storage.blob import BlobServiceClient, ResourceNotFoundError

def main(req: func.HttpRequest) -> func.HttpResponse:
    try:
        req_body = req.get_json()
        filename = req_body.get('filename')
        storage_account_name = req_body.get('storage_account_name')
        container_name = os.environ.get('ContainerName')  # Get container name from app config

        # Use ManagedIdentityCredential for authentication
        credential = ManagedIdentityCredential()

        # Check if container exists using managed identity
        storage_account_url = f"https://{storage_account_name}.blob.core.windows.net"
        blob_service_client = BlobServiceClient(account_url=storage_account_url, credential=credential)

        container_client = blob_service_client.get_container_client(container_name)
        if not container_client.exists():
            return func.HttpResponse(f"Container '{container_name}' not found.", status_code=404)

        # Check if file exists
        blob_client = blob_service_client.get_blob_client(container=container_name, blob=filename)
        try:
            blob_client.get_blob_properties()
        except ResourceNotFoundError:
            return func.HttpResponse(f"File '{filename}' not found.", status_code=404)

        # Check if filename ends with .csv, .json, or .complete
        if filename.endswith(('.csv', '.json', '.complete')):
            # Read content of the blob
            blob_data = blob_client.download_blob()
            content = blob_data.readall()

            # Overwrite the file with new content (for demonstration, content is not changed)
            blob_client.upload_blob(content, overwrite=True)

            return func.HttpResponse(f"File '{filename}' overwritten successfully.", status_code=200)
        else:
            return func.HttpResponse("File extension not supported.", status_code=400)
    except Exception as e:
        return func.HttpResponse(f"An error occurred: {str(e)}", status_code=500)