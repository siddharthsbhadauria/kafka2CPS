Certainly! In Azure Functions, the `function.json` file defines the configuration for each function, including triggers and bindings. Below is an example of how you can split the previous code into an `__init__.py` file and a `function.json` file:

1. **__init__.py:**

```python
import os
import azure.functions as func
from azure.storage.blob import BlobServiceClient, BlobClient, ContainerClient

def main(req: func.HttpRequest, sourceBlob: func.InputStream) -> func.HttpResponse:
    source_container_name = 'source-container'
    destination_container_name = 'destination-container'
    source_blob_name = 'example.txt'  # Replace with your source blob name

    # Retrieve connection strings from environment variables
    source_connection_str = os.environ['SourceStorageConnectionString']
    destination_connection_str = os.environ['DestinationStorageConnectionString']

    # Create BlobServiceClients
    source_blob_service_client = BlobServiceClient.from_connection_string(source_connection_str)
    destination_blob_service_client = BlobServiceClient.from_connection_string(destination_connection_str)

    # Get source container and blob
    source_container_client = source_blob_service_client.get_container_client(source_container_name)
    source_blob_client = source_container_client.get_blob_client(source_blob_name)

    # Get destination container
    destination_container_client = destination_blob_service_client.get_container_client(destination_container_name)

    # Copy blob to destination container
    destination_blob_client = destination_container_client.get_blob_client(source_blob_name)
    destination_blob_client.start_copy_from_url(source_blob_client.url)

    return func.HttpResponse(f"Blob copy initiated from {source_container_name}/{source_blob_name} to {destination_container_name}/{source_blob_name}.")

```

2. **function.json:**

```json
{
  "scriptFile": "__init__.py",
  "bindings": [
    {
      "authLevel": "function",
      "type": "httpTrigger",
      "direction": "in",
      "name": "req",
      "methods": ["get", "post"],
      "route": "copyBlob/{sourceBlob}"
    },
    {
      "type": "blob",
      "direction": "in",
      "name": "sourceBlob",
      "path": "source-container/{sourceBlob}",
      "connection": "SourceStorageConnectionString"
    }
  ]
}
```

Make sure to adjust the route, container names, and blob names as needed for your specific scenario. Also, set the `SourceStorageConnectionString` and `DestinationStorageConnectionString` environment variables in the Azure Functions application settings.
